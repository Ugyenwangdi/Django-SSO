https://www.youtube.com/watch?v=GQySb3W2feo

https://django-allauth.readthedocs.io/en/latest/index.html



Installation: https://django-allauth.readthedocs.io/en/latest/installation.html

1/ pip install django-allauth

2/ settings.py (Important - Please note ‘django.contrib.sites’ is required as INSTALLED_APPS):


# Specify the context processors as follows:
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # Already defined Django-related contexts here

                # `allauth` needs this from django
                'django.template.context_processors.request',
            ],
        },
    },
]


AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]


INSTALLED_APPS = [
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.github',

    'allauth.socialaccount.providers.twitter',
    'allauth.socialaccount.providers.linkedin',
]

3/ urls.py:

from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('accounts/', include('allauth.urls')),
]

4/ python manage.py migrate


5/ python manage.py createsuperuser

admin
password

6/ In settings.py 

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


SITE_ID = 1

8/ python manage.py runserver

http://127.0.0.1:8000/admin/



9/ edit the sites in django admin panel :


Domain name: localhost:8000

Display name: localhost


10/ https://django-allauth.readthedocs.io/en/latest/providers.html

ctrl + f : type google 

Open the developer console and register your app: 

the link opens to https://console.cloud.google.com/apis/dashboard?pli=1


- Create a new project: 

- Project name: Django OAuth

- Click on CREATE

- Click on SELECT PROJECT 
- Click OAuth consent screen , External, create, 

- App name: Django OAuth App
User support email: wulficode@gmail.com

Application home page: http://localhost:8000
Application privacy policy: http://localhost:8000/privacy/
Application terms of service: http://localhost:8000/service/


Developer contact information: wulficode@gmail.com


Click save and continue


11/ Scope: we will do from code: click save and continue

12/ Add some test users: Add few email addresses: click save and continue

13/ Summary: Back to the Dashboard


14/ Credentials: Create credentials: Create OAuth client ID : type is web application: name give any, Authorized JavaScript origins: domainname which is http://localhost:8000


Authorized redirect URIs : http://localhost:8000/accounts/google/login/callback/

Create


15/ Copy the client id in settings for time being



# Client ID: idsgdsgsd


# Client Secret: secretrhdsr

16/ Configure the django: go to admin panel 

Go to social applications at the bottom: Create a new social application: provider is google, Name: Google SSO , client id and client secret, key is not necessary for now, site choose localhost:8000, click save

From the documentation, you can specify the scope at the end of the settings
'''
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

'''


17/ Comment facebook and github in settings installed app;

go to : http://localhost:8000/accounts/login/


18/ settings:

LOGIN_REDIRECT_URL = 'home'


19/ urls.py 


from django.contrib import admin
from django.urls import path, include
from django.views.generic import TemplateView
urlpatterns = [
    path('admin/', admin.site.urls),
    path('home/', TemplateView.as_view(template_name='dashboard/home.html'), name='home'),
    path('accounts/', include('allauth.urls')),
]


20/ Download template from : https://github.com/akjasim/cb-dj-sso
 copy templates and social directories to project

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]


Try to go to : localhost:8000/accounts/login/


21/ in settings


LOGOUT_REDIRECT_URL = 'login'





doc:  https://django-crispy-forms.readthedocs.io/en/latest/install.html

- pip install django-crispy_forms


INSTALLED_APPS = (
    ...
    'crispy_forms',
)


CRISPY_TEMPLATE_PACK = 'bootstrap4'


STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'DjangoSSO/static'
]

22/ Now if we try to sign in using google and go to admin panel and check to users, user will be registered 


23/ We will do the facebook: In the providers documentation search for facebook 

https://django-allauth.readthedocs.io/en/latest/providers.html

The following Facebook settings are available:

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
    'facebook': {
        'METHOD': 'oauth2',
        <!-- 'SDK_URL': '//connect.facebook.net/{locale}/sdk.js', -->
        'SCOPE': ['email', 'public_profile'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'first_name',
            'last_name',
            'middle_name',
            'name',
            'name_format',
            'picture',
            'short_name'
        ],
        'EXCHANGE_TOKEN': True,
        <!-- 'LOCALE_FUNC': 'path.to.callable', -->
        'VERIFIED_EMAIL': False,
        'VERSION': 'v13.0',
    }
}


uncomment in the installed app sections


24/  Create an app at

https://developers.facebook.com/


Click on create app: select consumer, display name: Django OAuth, create app

Click on create test app: create test app by choosing a name

In settings: basic settings

App id: idgsada

App secret: secretdgsgd

Add app domains: localhost, save changes


- Click on advanced ....


25/ Add the application to the djangoadmin panel 

In the social application section: Provider: Facebook, Name: Facebook SSO, id, key, sites

save

25/ Github: 

register the app: https://github.com/settings/applications/new

application name: Django OAuth, homepage url: http://localhost:8080, callback url: http://localhost:8000/accounts/github/login/callback/  register the application


Client id: idsgsdgs

Client Secret: secretlfsdfsdfds


uncomment github in installed app settings

In the admin panel: register the application in social application

Provider: Github, Name: Django SSO, id, key, sites, save

Test with sign in with github

localhost:8000/accounts/login/


Ro remove the password just set the password and you can remove